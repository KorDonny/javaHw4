/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package javahw4;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.mockito.Mockito;

import javahw4.Calculator.IAdder;
import javahw4.Calculator.IFlipper;
import javahw4.Calculator.ISubtractor;

//BeforeAll 오류 : setUp의 static 또는 class의 TestInstance를 해야하는 이유는?
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class SubtractorTest{
    private ISubtractor subtractor;
    private IAdder adder;
    private IFlipper flipper;

    @BeforeAll
    public void setUp(){
        // IAdder adder = Mockito.mock(IAdder.class);
        // IFlipper flipper = Mockito.mock(IFlipper.class);

        // Mockito.when(flipper.flip(5)).thenReturn(-5);
        // Mockito.when(adder.add(3, -5)).thenReturn(-2);
        adder = new Adder();
        flipper = new Flipper();
        subtractor = new Subtractor(adder, flipper);
    }
    @Test
    public void substractTest(){
        Assertions.assertEquals(-2, subtractor.subtract(3, 5));
    }
    @Test
    public void mockRealization(){
        Assertions.assertEquals(-5, flipper.flip(5));
        Assertions.assertEquals(-2, adder.add(3, -5));
    }
}